name: Test Action

# 只允许手动触发测试，避免在 push 时自动扫描本仓库
on:
  workflow_dispatch:
    inputs:
      keyword:
        description: '搜索关键词'
        required: false
        default: '.oast.fun'
      dry_run:
        description: '仅扫描模式（true/false）'
        required: false
        type: boolean
        default: true
      mask_sensitive:
        description: '日志脱敏（true/false）'
        required: false
        type: boolean
        default: true
      encrypt_logs:
        description: '日志加密（true/false）'
        required: false
        type: boolean
        default: true
      verbose:
        description: '详细日志模式（true/false）'
        required: false
        type: boolean
        default: false
      disable_workflows:
        description: '禁用受感染仓库的工作流（true/false）'
        required: false
        type: boolean
        default: false
      create_issue:
        description: '发现威胁时创建 Issue（true/false）'
        required: false
        type: boolean
        default: false
      report_format:
        description: '报告输出格式'
        required: false
        type: choice
        options:
          - markdown
          - json
          - html
          - pdf
        default: markdown

jobs:
  test-dry-run:
    name: 测试扫描模式
    runs-on: ubuntu-latest

    permissions:
      contents: write
      actions: write
      issues: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Test Action (Dry Run)
        uses: ./
        with:
          github-token: ${{ secrets.SECRETS_TOKEN }}
          keyword: ${{ github.event.inputs.keyword || '.oast.fun' }}
          dry-run: ${{ github.event.inputs.dry_run != false && 'true' || 'false' }}
          create-issue: ${{ github.event.inputs.create_issue == true && 'true' || 'false' }}
          mask-sensitive-data: ${{ github.event.inputs.mask_sensitive != false && 'true' || 'false' }}
          encrypt-logs: ${{ github.event.inputs.encrypt_logs != false && 'true' || 'false' }}
          verbose: ${{ github.event.inputs.verbose == true && 'true' || 'false' }}
          disable-workflows: ${{ github.event.inputs.disable_workflows == true && 'true' || 'false' }}
          report-format: ${{ github.event.inputs.report_format || 'markdown' }}

      - name: Verify outputs
        run: |
          echo "✓ 测试完成！"
          # 验证目录和报告存在
          if [ -d "security/reports" ]; then
            echo "✓ 报告目录已创建"
            ls -la security/reports/
          else
            echo "⚠️ 报告目录不存在"
          fi

          if [ -d "security/logs" ]; then
            echo "✓ 日志目录已创建"
            ls -la security/logs/
          else
            echo "⚠️ 日志目录不存在"
          fi
